<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans" 
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
  xmlns:context="http://www.springframework.org/schema/context"
  xmlns:tx="http://www.springframework.org/schema/tx" 
  xmlns:aop="http://www.springframework.org/schema/aop"
  xsi:schemaLocation="http://www.springframework.org/schema/beans  http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd
       http://www.springframework.org/schema/aop  http://www.springframework.org/schema/aop/spring-aop.xsd
       http://www.springframework.org/schema/context  http://www.springframework.org/schema/context/spring-context.xsd">


  <!-- 引入配置文件 -->
  <bean id="propertyConfigurer" class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
    <property name="location" value="classpath:properties/jdbc.properties" />
  </bean>


  <!-- 数据源定义,使用Apache DBCP 连接池 -->
  <bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource" destroy-method="close">
    <property name="driverClassName" value="${jdbc.driverClassName}" />
    <property name="url" value="${jdbc.url}" />
    <property name="username" value="${jdbc.username}" />
    <property name="password" value="${jdbc.password}" />
    <!-- 初始化连接大小 -->
    <property name="initialSize" value="${pool.initialSize}"></property>
    <!-- 连接池最大数量 -->
    <property name="maxActive" value="${pool.maxActive}"></property>
    <!-- 连接池最大空闲 -->
    <property name="maxIdle" value="${pool.maxIdle}"></property>
    <!-- 连接池最小空闲 -->
    <property name="minIdle" value="${pool.minIdle}"></property>
    <!-- 获取连接最大等待时间 -->
    <property name="maxWait" value="${pool.maxWait}"></property>

    <property name="validationQuery" value="${pool.validationQuery}" />
    <property name="testOnBorrow" value="false" />
    <property name="testOnReturn" value="false" />
    <property name="testWhileIdle" value="true" />

    <!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
    <property name="timeBetweenEvictionRunsMillis" value="60000" />
    <!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
    <property name="minEvictableIdleTimeMillis" value="25200000" />

    <!-- 打开removeAbandoned功能 -->
    <property name="removeAbandoned" value="true" />
    <!-- 1800秒，也就是30分钟 -->
    <property name="removeAbandonedTimeout" value="1800" />
    <!-- 关闭abanded连接时输出错误日志 -->
    <property name="logAbandoned" value="true" />

  </bean>

  <!-- 使用JDBC事物   配置事务管理  -->
  <bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
    <property name="dataSource" ref="dataSource" />
  </bean>
  <!-- 使用annotation注解方式配置事务 -->
  <tx:annotation-driven transaction-manager="transactionManager" />

  <!-- AOP 事务管理 属性 -->
  <tx:advice id="transactionAdvice" transaction-manager="transactionManager">
    <tx:attributes>
      <tx:method name="add*" propagation="REQUIRED" />
      <tx:method name="append*" propagation="REQUIRED" />
      <tx:method name="save*" propagation="REQUIRED" />
      <tx:method name="update*" propagation="REQUIRED" rollback-for="Exception" />
      <tx:method name="modify*" propagation="REQUIRED" />
      <tx:method name="edit*" propagation="REQUIRED" />
      <tx:method name="insert*" propagation="REQUIRED" rollback-for="Exception" />
      <tx:method name="delete*" propagation="REQUIRED" rollback-for="Exception" />
      <tx:method name="remove*" propagation="REQUIRED" />
      <tx:method name="repair" propagation="REQUIRED" />


      <tx:method name="select*" propagation="REQUIRED" read-only="true" />
      <tx:method name="get*" propagation="REQUIRED" read-only="true" />
      <tx:method name="find*" propagation="REQUIRED" read-only="true" />
      <tx:method name="load*" propagation="REQUIRED" read-only="true" />
      <tx:method name="search*" propagation="REQUIRED" read-only="true" />
      <tx:method name="datagrid*" propagation="REQUIRED" read-only="true" />

      <tx:method name="*" propagation="REQUIRED" read-only="true" />
    </tx:attributes>
  </tx:advice>

  <!-- 配置AOP切面 -->
  <aop:config>
    <aop:pointcut id="transactionPointcut" expression="execution(* com.baomidou.springwind.service.impl..*.*(..))" />
    <aop:advisor pointcut-ref="transactionPointcut" advice-ref="transactionAdvice" />
  </aop:config>

  <!-- 激活自动代理功能 , 强制使用cglib代理   如果为false则spring会自动选择- -->
  <aop:aspectj-autoproxy proxy-target-class="true" />

  <!-- 采用注释的方式配置bean -->
  <context:annotation-config />
  
  <!-- 配置要扫描的包 -->
  <context:component-scan base-package="com.soak.*.**" />

</beans>
